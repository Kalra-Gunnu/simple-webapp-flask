name: Flask CI/CD with Docker

on:
  push:
    branches:
      - main
      - staging
  release:
    types: [created]

jobs:
  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # Install dependencies for testing
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      # Run tests (this will pick up tests/test_app.py)
      - name: Run tests
        run: pytest -v

      # Build Docker image if tests pass
      - name: Build Docker image
        if: success()
        run: |
          IMAGE_NAME=simple-webapp-flask:${{ github.sha }}
          echo "âœ… Tests passed. Building Docker image $IMAGE_NAME"
          docker build -t $IMAGE_NAME .

  deploy-staging:
    name: Deploy to Staging
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Staging Server
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          STAGING_HOST: ${{ secrets.STAGING_HOST }}
          STAGING_USER: ${{ secrets.STAGING_USER }}
        run: |
          echo "$SSH_KEY" > ssh_key && chmod 600 ssh_key
          ssh -o StrictHostKeyChecking=no -i ssh_key $STAGING_USER@$STAGING_HOST << 'EOF'
          docker stop simple-webapp-flask || true
          docker rm simple-webapp-flask || true
          cd /home/$STAGING_USER/simple-webapp-flask
          git pull origin staging
          docker build -t simple-webapp-flask .
          docker run -d --name simple-webapp-flask -p 5000:5000 simple-webapp-flask
          EOF

  deploy-production:
    name: Deploy to Production
    needs: build-test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Production Server
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          PROD_HOST: ${{ secrets.PROD_HOST }}
          PROD_USER: ${{ secrets.PROD_USER }}
        run: |
          echo "$SSH_KEY" > ssh_key && chmod 600 ssh_key
          ssh -o StrictHostKeyChecking=no -i ssh_key $PROD_USER@$PROD_HOST << 'EOF'
          docker stop simple-webapp-flask || true
          docker rm simple-webapp-flask || true
          cd /home/$PROD_USER/simple-webapp-flask
          git pull origin main
          docker build -t simple-webapp-flask .
          docker run -d --name simple-webapp-flask -p 5000:5000 simple-webapp-flask
          EOF
